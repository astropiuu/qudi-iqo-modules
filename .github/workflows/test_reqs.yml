# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Testing

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *' 

permissions:
  contents: write

concurrency:
  group:  ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: ['3.8', '3.9', '3.10']
   
       
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
        cache-dependency-path: pyproject.toml

    - name: Checkout qudi core
      run: |
        cd ..
        git clone https://github.com/prithviulm/qudi-core.git
        cd qudi-core
        python -m pip install --upgrade pip
        pip install -e ".[dev-test]"
        git checkout application_test
        qudi-install-kernel
        cd ../qudi-iqo-modules

    - name: Install dependencies for iqo modules
      run: |
        pip install -e ".[dev-test]"

    - name: Test with pytest
      run: |
        pytest -s

    - name: Switch to test branch
      run: |
        git checkout workflow_save
        cd workflow_utils

    - name: Pip freeze 
      if: always()
      run: |
        pip freeze | Out-File -Encoding UTF8 reqs_${{ matrix.python-version }}.txt

    - name: Compare pip freeze outputs
      if: failure()
      run: |
       python compare_pip_freeze.py failed_reqs.txt reqs_${{ matrix.python-version }}.txt pip_freeze_diff_${{ matrix.python-version }}.txt

    - name: Upload pip freeze diff
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: pip-freeze-diff-${{ matrix.python-version }}
        path: pip_freeze_diff_${{ matrix.python-version }}.txt

    - name: send email in case of failure
      if: failure()
      run: |
        python failure_reqs_email.py -p ${{ matrix.python-version }} -d pip_freeze_diff_${{ matrix.python-version }}.txt


    - name: Configure git
      run: |
        git config --global user.name "astropiuu"
        git config --global user.email "mohit.shah@uni-ulm.de"
 
    - name: Pip freeze on test success and commit latest deps
      if: success()
      run: |
        git add reqs_${{ matrix.python-version }}.txt
        git commit -m "updated reqs.txt to latest successful run"
        git pull --rebase
        git push --force-with-lease origin HEAD:workflow
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
